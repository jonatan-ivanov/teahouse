spring.application.name=tea-service
spring.application.org=teahouse
spring.profiles.default=local
server.port=8090

spring.output.ansi.enabled=always
spring.jackson.serialization.indent_output=true
spring.jackson.date-format=com.fasterxml.jackson.databind.util.ISO8601DateFormat

spring.mvc.problemdetails.enabled=true

logging.file.name=${spring.application.home:.}/logs/${spring.application.name}.log
logbook.predicate.exclude[0].path=/actuator/**

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.env.show-values=always
management.info.env.enabled=true
management.info.java.enabled=true
management.info.os.enabled=true
management.info.process.enabled=true

spring.cloud.discovery.client.composite-indicator.enabled=false

management.observations.key-values.org=${spring.application.org}
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.org=${spring.application.org}
management.metrics.tags.profiles=${spring.profiles.active}
management.prometheus.metrics.export.step=10s
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles-histogram.http.client.requests=true
management.tracing.sampling.probability=1.0

spring.cloud.loadbalancer.cache.ttl=1s

server.tomcat.mbeanregistry.enabled=true

spring.cloud.openfeign.okhttp.enabled=true

spring.cloud.openfeign.client.config.water.url=http://localhost:8091
spring.cloud.openfeign.client.config.water.connect-timeout=100
spring.cloud.openfeign.client.config.water.read-timeout=5000

spring.cloud.openfeign.client.config.tealeaf.url=http://localhost:8092
spring.cloud.openfeign.client.config.tealeaf.connect-timeout=100
spring.cloud.openfeign.client.config.tealeaf.read-timeout=5000

# logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG
#logging.level.org.example.teahouse.tea.water.WaterClient=DEBUG
#logging.level.org.example.teahouse.tea.tealeaf.TealeafClient=DEBUG
logging.level.com.netflix.discovery=OFF

spring.cloud.stream.output-bindings=orders
spring.cloud.stream.bindings.orders-out-0.destination=orders
