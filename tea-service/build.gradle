apply from: "$rootDir/gradle/spring-boot.gradle"

configurations {
    adoc
}

dependencies {
    implementation project(':water-service:water-api')
    implementation project(':tealeaf-service:tealeaf-api')
    implementation project(':tea-service:tea-api')

    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'io.github.openfeign:feign-okhttp'
    implementation 'io.github.openfeign:feign-micrometer'

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:latest.release'

    implementation 'org.zalando:logbook-spring-boot-starter'
    implementation 'org.zalando:logbook-okhttp'

    runtimeOnly 'com.github.loki4j:loki-logback-appender:latest.release'

    adoc 'io.micrometer:micrometer-docs-generator:1.+'
}

tasks.register('asciidoctor', JavaExec) {
    mainClass = 'io.micrometer.docs.DocsGeneratorCommand'
    classpath configurations.adoc
    // input folder, inclusion pattern, output folder
    args projectDir.path, '.*', project.layout.buildDirectory.dir('asciidoctor').get().asFile.path
}
