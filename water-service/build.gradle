apply from: "$rootDir/gradle/spring-boot.gradle"

dependencies {
    implementation project(':water-service:water-api')

    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

    implementation 'net.ttddyy.observation:datasource-micrometer-spring-boot:1.+'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.+'

   implementation 'org.zalando:logbook-spring-boot-starter'

    runtimeOnly 'com.github.loki4j:loki-logback-appender:latest.release'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java:latest.release'
    runtimeOnly 'org.flywaydb:flyway-core'
    runtimeOnly 'org.flywaydb:flyway-mysql'

    testImplementation 'org.flywaydb:flyway-core'
}

// TODO: remove this once the Boot Gradle Plugin works with Java 22
springBoot.mainClass = 'org.example.teahouse.water.WaterServiceApplication'

ext {
    micrometerDocsVersion="1.0.1"
}

configurations {
    adoc
}

dependencies {
    adoc "io.micrometer:micrometer-docs-generator:$micrometerDocsVersion"
}

task generateObservabilityDocs(type: JavaExec) {
    mainClass = "io.micrometer.docs.DocsGeneratorCommand"
    classpath configurations.adoc
    // input folder, inclusion pattern, output folder
    args project.projectDir.getAbsolutePath(), ".*", project.buildDir.getAbsolutePath()
}
